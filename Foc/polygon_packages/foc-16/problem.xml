<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="16" short-name="foc" url="https://polygon.codeforces.com/p7GzbLG/igroza/foc">
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="" run-count="1">
        <testset name="tests">
            <time-limit>1500</time-limit>
            <memory-limit>268435456</memory-limit>
            <test-count>24</test-count>
            <input-path-pattern>tests/%02d</input-path-pattern>
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
            <tests>
                <test cmd="generator_TL -n 10 dwqewfrgeh53" group="1-30p" method="generated" points="2.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 15 -m 25 -comps 3 -len 3 efwrgtrhyj5765" group="1-30p" method="generated" points="2.0"/>
                <test cmd="generator_TL -n 25 hjviuo786r75" group="1-30p" method="generated" points="2.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 20 -m 100 -comps 5 -len 6 regtrytu890o7iyutre" group="1-30p" method="generated" points="2.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 100 -m 100 -comps 20 -len 2 fewrgt6h7j" group="1-30p" method="generated" points="2.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 100 -m 100 -comps 11 -len 4 y8iuhkjoil" group="1-30p" method="generated" points="2.0"/>
                <test cmd="generator_TL -n 50 345d6fuygbinioj" group="1-30p" method="generated" points="3.0"/>
                <test cmd="generator_TL -n 100 4w5e67fyuvhbi" group="1-30p" method="generated" points="3.0"/>
                <test cmd="generator_TL -n 100 8y9oihubjhvty" group="1-30p" method="generated" points="3.0"/>
                <test cmd="generator_TL -n 100 s546dctgbioij" group="1-30p" method="generated" points="3.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 30 -m 30 -comps 15 -len 1 98yiugbhgfty5t" group="1-30p" method="generated" points="3.0"/>
                <test cmd="generator_TL -n 100 23defrbtnyjuk879p775" group="1-30p" method="generated" points="3.0"/>
                <test cmd="generator_TL -n 1000 fih3" group="2-70p" method="generated" points="5.0"/>
                <test cmd="generator_TL -n 1000 vjks" group="2-70p" method="generated" points="5.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 1000 -m 1000 -comps 4 -len 200 zcxvvccbcvb" group="2-70p" method="generated" points="5.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 1000 -m 1000 -comps 4 -len 200 ^$#$@$!@$#@$#@" group="2-70p" method="generated" points="5.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 1000 -m 1000 -comps 10 -len 50 ”!”!”!”!11111" group="2-70p" method="generated" points="5.0"/>
                <test cmd="generator_TL -n 250 ef3rvetbyu67ki865h" group="2-70p" method="generated" points="5.0"/>
                <test cmd="generator_TL -n 500 23r4fewrgtyjukil8" group="2-70p" method="generated" points="5.0"/>
                <test cmd="generator_TL -n 750 fewcdveftrhyjuk65j" group="2-70p" method="generated" points="5.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 500 -m 750 -comps 10 -len 5 e5dftyuihojp" group="2-70p" method="generated" points="5.0"/>
                <test cmd="gen_choose_comps_and_zone_len -n 500 -m 250 -comps 25 -len 5 ascdvfbrty564erw" group="2-70p" method="generated" points="5.0"/>
                <test cmd="generator_TL -n 1000 as5d6ctvubinoij-" group="2-70p" method="generated" points="10.0"/>
                <test cmd="generator_TL -n 1000 ajgv" group="2-70p" method="generated" points="10.0"/>
            </tests>
            <groups>
                <group feedback-policy="points" name="1-30p" points="30.0" points-policy="complete-group"/>
                <group feedback-policy="points" name="2-70p" points="70.0" points-policy="complete-group">
                    <dependencies>
                        <dependency group="1-30p"/>
                    </dependencies>
                </group>
            </groups>
        </testset>
    </judging>
    <files>
        <resources>
            <file path="files/olymp.sty"/>
            <file path="files/problem.tex"/>
            <file path="files/statements.ftl"/>
            <file path="files/testlib.h" type="h.g++"/>
        </resources>
        <executables>
            <executable>
                <source path="files/gen_choose_comps_and_zone_len.cpp" type="cpp.g++17"/>
                <binary path="files/gen_choose_comps_and_zone_len.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/gen_random.cpp" type="cpp.g++17"/>
                <binary path="files/gen_random.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/generator_TL.cpp" type="cpp.g++17"/>
                <binary path="files/generator_TL.exe" type="exe.win32"/>
            </executable>
            <executable>
                <source path="files/validator.cpp" type="cpp.g++17"/>
                <binary path="files/validator.exe" type="exe.win32"/>
            </executable>
        </executables>
    </files>
    <assets>
        <checker name="std::ncmp.cpp" type="testlib">
            <source path="files/check.cpp" type="cpp.g++17"/>
            <binary path="check.exe" type="exe.win32"/>
            <copy path="check.cpp"/>
            <testset>
                <test-count>0</test-count>
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                <tests/>
            </testset>
        </checker>
        <validators>
            <validator>
                <source path="files/validator.cpp" type="cpp.g++17"/>
                <binary path="files/validator.exe" type="exe.win32"/>
                <testset>
                    <test-count>0</test-count>
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                    <tests/>
                </testset>
            </validator>
        </validators>
        <solutions>
            <solution tag="accepted">
                <source path="solutions/foc_vlad_assert.cpp" type="cpp.g++11"/>
                <binary path="solutions/foc_vlad_assert.exe" type="exe.win32"/>
            </solution>
            <solution tag="rejected">
                <source path="solutions/foc_vlad_gresit.cpp" type="cpp.g++17"/>
                <binary path="solutions/foc_vlad_gresit.exe" type="exe.win32"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/foc_vlad_nosmen.cpp" type="cpp.g++17"/>
                <binary path="solutions/foc_vlad_nosmen.exe" type="exe.win32"/>
            </solution>
            <solution tag="main">
                <source path="solutions/iulia_100p.cpp" type="cpp.g++11"/>
                <binary path="solutions/iulia_100p.exe" type="exe.win32"/>
            </solution>
            <solution tag="time-limit-exceeded">
                <source path="solutions/iulia_brut.cpp" type="cpp.g++11"/>
                <binary path="solutions/iulia_brut.exe" type="exe.win32"/>
            </solution>
            <solution tag="accepted">
                <source path="solutions/sol_giovani.cpp" type="cpp.g++17"/>
                <binary path="solutions/sol_giovani.exe" type="exe.win32"/>
            </solution>
        </solutions>
    </assets>
    <properties>
        <property name="tests-wellformed" value="true"/>
    </properties>
    <stresses>
        <stress-count>3</stress-count>
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
        <list>
            <stress index="3" path="stresses/003"/>
            <stress index="2" path="stresses/002"/>
            <stress index="1" path="stresses/001"/>
        </list>
    </stresses>
</problem>
